name: Automatic Release

on:
  push:
    branches:
      - master

jobs:
  update_application_properties:
    name: Update application.properties
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Calculate next version
        id: calculate_version
        uses: anothrNick/github-tag-action@1.11.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DRY_RUN: true

      - name: Update application.properties
        run: |
          VERSION=${{ steps.calculate_version.outputs.new_tag }}
          PROPERTIES_FILE="application.properties"
          DATE=$(TZ=UTC date "+%a %b %d %T %Z %Y")
          
          # Read current values
          GRAILS_VERSION=$(grep "^app.grails.version=" "$PROPERTIES_FILE" | cut -d'=' -f2)
          APP_NAME=$(grep "^app.name=" "$PROPERTIES_FILE" | cut -d'=' -f2)
          
          # Create new content
          NEW_CONTENT="#Grails Metadata file
          #$DATE
          app.grails.version=$GRAILS_VERSION
          app.name=$APP_NAME
          app.version=${VERSION#v}"
          
          # Update the file
          echo "$NEW_CONTENT" > "$PROPERTIES_FILE"

      - name: Commit updated application.properties
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add application.properties
          git commit -m "Update version to ${{ steps.calculate_version.outputs.new_tag }} in application.properties"
          git push

  tag:
    name: Create Tag
    runs-on: ubuntu-latest
    needs: update_application_properties
    if: always()
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Github Tag Bump
        uses: anothrNick/github-tag-action@1.11.0
